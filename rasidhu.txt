Deployment
    id    triggered_by_user_id    status
     1        1                   waiting/deploying/finished/exception

Application
    name
    source => git_repo/docker_image
    git_branch
    git_repo
    has many ports
    has many variables
    min_instances
    max_instances
    ip_address
    vcpu
    memory


has_one :state
     instance_count | health_check | cpu_usage | memory_usage | metadata
        1                  1           pass         30%          {  }

ports
    app_port
    external_port
    publicly_accessible

key value pairs
    key
    value
    is_secret


Events
  app_id pod/create 
  app_id pod/delete
  app_id pod/delete


pilot
    kube yaml
    apply
    events ->
        pod/create




2 pod / health -> 200, / health
1 service
1 service account


app_id => pod/create



1 2


provisioning

pilot => gitpush

pilot pull
apply

master node

pilot
    event      | payload
    pod/create   payload, pod_id
    pod/create
    pod/delete  app_id



1 slate-api 
2 1

git -> apply
desired state = {
    pod: 2,
    service: 1
}

actual_state = {
    pod: 3,
    service: 0,
    errors: [{

    }]
}



problems:
    if base is down, we will lose the data sent by the pilot, which will lead to inconsistant state



DATABASE

1. choose database engine

    1. name
    2. choose engine

2. configure

    1. use for development
    2. use for production
    3. expose publicly


3. allocate resources

    1. Memory
    2. Storage
    3. vCPU



BEFORE PRODUCTION
# PROVIDE VERSIONS IN ALL GEMS BEFORE PRODUCTION